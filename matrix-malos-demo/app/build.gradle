
apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'
apply plugin: 'io.fabric'

if(project.hasProperty("matrix_malos.signing") && new File(project.property("matrix_malos.signing") + ".gradle").exists()) {
    apply from: project.property("matrix_malos.signing") + ".gradle";
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "admobilize.matrix.malosclient"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 391
        versionName "1.2.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {
        // Define separate dev and prod product flavors.
        dev {
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 23
        }
        prod {
            minSdkVersion 19
            ext.betaDistributionEmailsFilePath="distribution_emails.txt"
            ext.betaDistributionReleaseNotesFilePath="release_notes.txt"
        }
    }
    sourceSets {
        main {
            proto {
            }
        }
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'io.grpc:grpc-okhttp:1.10.0'
    implementation 'io.grpc:grpc-protobuf-lite:1.10.0'
    implementation 'io.grpc:grpc-stub:1.10.0'
    implementation 'com.iamhabib:easy-preference:1.0.1'
    implementation 'javax.annotation:javax.annotation-api:1.2'

    implementation ('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.0.2"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.1.2'
        }
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/build/generated"
}

